@page
@model DrawClient.Pages.Customer.Course.IndexModel
@{
    Layout = "_LayoutCourse";
}

<!--====== HEADER PART START ======-->

<header id="header-part">

    <div class="header-logo-support pt-30 pb-30">
        <div class="container">
            <div class="row">
                <div class="col-lg-4 col-md-4">
                    <a href="/Index" class="draw-header">Drawchad</a>
                </div>
                <div class="col-lg-8 col-md-8">
                    <div class="support-button float-right d-none d-md-block">
                        <div class="button float-left">
                            <div class="dropdown">
                                <a href="/Customer/Authentication/Login" class="main-btn logged-user"><i class="bi bi-person-circle"></i></a>
                                <div class="dropdown-content">
                                    <ul>
                                        <li><a href="#"><i class="bi bi-person-fill-gear"></i> Profile</a></li>
                                        <li><a href="/Customer/Course/Purchased"><i class="bi bi-book-fill"></i> My Courses</a></li>
                                        <li><a href="/Customer/Authentication/Logout"><i class="bi bi-door-open-fill"></i> Logout</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </div> <!-- header logo support -->

    <div class="navigation">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-9 col-8">
                    <nav class="navbar navbar-expand-lg">
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>

                        <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                            <ul class="navbar-nav mr-auto">
                                <li class="nav-item">
                                    <a asp-page="Detail" asp-route-id="@Model.Course.Id"><i class="bi bi-arrow-left-circle-fill"></i> @Model.Course.Name </a>
                                </li>
                            </ul>
                        </div>
                    </nav> <!-- nav -->
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </div>

</header>
<!--====== HEADER PART ENDS ======-->
<!--====== SEARCH BOX PART START ======-->

<div class="search-box">
    <div class="serach-form">
        <div class="closebtn">
            <span></span>
            <span></span>
        </div>
        <form action="#">
            <input type="text" placeholder="Search by keyword">
            <button><i class="fa fa-search"></i></button>
        </form>
    </div> <!-- serach form -->
</div>

<!--====== SEARCH BOX PART ENDS ======-->

<section id="corses-singel" class="pt-20 pb-20 gray-bg">
    <div class="container__course-index" style="margin: 0 auto">
        <div class="wrapper wrapper-content animated fadeInRight">
            <div class="row">
                @if (Model.Lesson.IsExam)
                {
                    <div class="col-sm-8">
                        <div class="ibox">
                            <div class="ibox-content tbl-exam">
                                <h6 class="tbl-exam">
                                    <a class="index-title">
                                        @Model.Lesson.Title
                                    </a>
                                </h6>
                            </div>
                            <div class="ibox-content">
                                <h6>
                                    <a class="text-navy">
                                        Content:
                                    </a>
                                </h6>
                                <p class="mt-1">@Model.Lesson.Content</p>
                            </div>
                            @if (Model.Exam == null)
                            {
                                if (Model.Course.Material == "Kỹ thuật số")
                                {
                                    <div class="ibox-content">
                                        <div class="mb-10">
                                            <h6>
                                                <a class="text-navy">
                                                    Instant Canvas:
                                                </a>
                                            </h6>
                                        </div>
                                        <div id="bd-wrapper" ng-controller="CanvasControls">

                                            <canvas id="c" width="1030" height="600" style="border:1px solid #aaa"></canvas>

                                            <div>
                                                <div id="drawing-mode-options">
                                                    <div style="display: flex;" class="mt-20">
                                                        <label for="drawing-mode-selector" style="width: 130px; line-height: 40px;">Mode:</label>
                                                        <select id="drawing-mode-selector">
                                                            <option>Pencil</option>
                                                            <option>Circle</option>
                                                            <option>Spray</option>
                                                            <option>Pattern</option>

                                                            <option>hline</option>
                                                            <option>vline</option>
                                                            <option>square</option>
                                                            <option>diamond</option>
                                                            <option>texture</option>
                                                        </select>
                                                    </div>

                                                    <label for="drawing-line-width" class="mt-20" style="width: 130px;">Line width:</label>
                                                    <span class="info">30</span><input type="range" value="30" min="0" max="150"
                                                                                       id="drawing-line-width"><br>

                                                    <label for="drawing-color" class="mt-20" style="width: 130px;">Line color:</label>
                                                    <input type="color" value="#005E7A" id="drawing-color"><br>

                                                    <label for="drawing-shadow-color" class="mt-20" style="width: 130px;">Shadow color:</label>
                                                    <input type="color" value="#005E7A" id="drawing-shadow-color"><br>

                                                    <label for="drawing-shadow-width" class="mt-20" style="width: 130px;">Shadow width:</label>
                                                    <span class="info">0</span><input type="range" value="0" min="0" max="50" id="drawing-shadow-width"><br>

                                                    <label for="drawing-shadow-offset" class="mt-20" style="width: 130px;">Shadow offset:</label>
                                                    <span class="info">0</span><input type="range" value="0" min="0" max="50"
                                                                                      id="drawing-shadow-offset"><br>
                                                </div>

                                                <button id="drawing-mode" class="btn main-btn mt-20">Cancel drawing mode</button><br>
                                                <button id="clear-canvas" class="btn main-btn mt-20">Clear</button><br>
                                                <button id="export-button" class="btn main-btn mt-20">Export as PNG</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="ibox-content">
                                    <h6>
                                        <a class="text-navy">
                                            Submit My Work:
                                        </a>
                                    </h6>
                                    <form method="post" enctype="multipart/form-data" class="mt-10">
                                        <div class="form-group row">
                                            <div class="col">
                                                <input required class="form-control" id="imageFile" type="file" asp-for="Image" accept="image/*">
                                            </div>
                                            <input type="hidden" name="id" value="@Model.Course.Id" />
                                            <input type="hidden" name="changeId" value="@Model.Lesson.Id" />
                                            <div class="col">
                                                <button type="submit" value="Add" id="btnAdd" class="btn btn-primary">Submit</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            }
                            else
                            {   
                                if (Model.Exam.Result == null)
                                {
                                    <div class="ibox-content">
                                        <div class="mb-10">
                                            <h6>
                                                <a class="text-navy">
                                                    Your Work:
                                                </a>
                                            </h6>
                                        </div>
                                        <div class="image-container">
                                            <img src="@Model.Exam.AnswerUrl" alt="Image Description">
                                        </div>
                                    </div>
                                    if (Model.Course.Material == "Kỹ thuật số")
                                    {
                                        <div class="ibox-content">
                                            <div class="mb-10">
                                                <h6>
                                                    <a class="text-navy">
                                                        Instant Canvas:
                                                    </a>
                                                </h6>
                                            </div>
                                            <div id="bd-wrapper" ng-controller="CanvasControls">

                                                <canvas id="c" width="1030" height="600" style="border:1px solid #aaa"></canvas>

                                                <div>
                                                    <div id="drawing-mode-options">
                                                        <div style="display: flex;" class="mt-20">
                                                            <label for="drawing-mode-selector" style="width: 130px; line-height: 40px;">Mode:</label>
                                                            <select id="drawing-mode-selector">
                                                                <option>Pencil</option>
                                                                <option>Circle</option>
                                                                <option>Spray</option>
                                                                <option>Pattern</option>

                                                                <option>hline</option>
                                                                <option>vline</option>
                                                                <option>square</option>
                                                                <option>diamond</option>
                                                                <option>texture</option>
                                                            </select>
                                                        </div>

                                                        <label for="drawing-line-width" class="mt-20" style="width: 130px;">Line width:</label>
                                                        <span class="info">30</span><input type="range" value="30" min="0" max="150"
                                                                                           id="drawing-line-width"><br>

                                                        <label for="drawing-color" class="mt-20" style="width: 130px;">Line color:</label>
                                                        <input type="color" value="#005E7A" id="drawing-color"><br>

                                                        <label for="drawing-shadow-color" class="mt-20" style="width: 130px;">Shadow color:</label>
                                                        <input type="color" value="#005E7A" id="drawing-shadow-color"><br>

                                                        <label for="drawing-shadow-width" class="mt-20" style="width: 130px;">Shadow width:</label>
                                                        <span class="info">0</span><input type="range" value="0" min="0" max="50" id="drawing-shadow-width"><br>

                                                        <label for="drawing-shadow-offset" class="mt-20" style="width: 130px;">Shadow offset:</label>
                                                        <span class="info">0</span><input type="range" value="0" min="0" max="50"
                                                                                          id="drawing-shadow-offset"><br>
                                                    </div>

                                                    <button id="drawing-mode" class="btn main-btn mt-20">Cancel drawing mode</button><br>
                                                    <button id="clear-canvas" class="btn main-btn mt-20">Clear</button><br>
                                                    <button id="export-button" class="btn main-btn mt-20">Export as PNG</button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    <div class="ibox-content">
                                        <h6>
                                            <a class="text-navy">
                                                Re-Submit My Work:
                                            </a>
                                        </h6>
                                        <form method="post" asp-page-handler="resubmit" enctype="multipart/form-data" class="mt-10">
                                            <div class="form-group row">
                                                <div class="col">
                                                    <input required class="form-control" id="imageFile" type="file" asp-for="Image" accept="image/*">
                                                </div>
                                                <input type="hidden" name="id" value="@Model.Course.Id" />
                                                <input type="hidden" name="changeId" value="@Model.Lesson.Id" />
                                                <input type="hidden" name="examId" value="@Model.Exam.Id" />
                                                <div class="col">
                                                    <button type="submit" value="Add" id="btnAdd" class="btn btn-primary">Submit</button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                } else
                                {   
                                    <div class="ibox-content">
                                        <div class="mb-10">
                                            <h6>
                                                <a class="text-navy">
                                                    Your Work:
                                                </a>
                                            </h6>
                                        </div>
                                        <div class="image-container">
                                            <img src="@Model.Exam.AnswerUrl" alt="Image Description">
                                        </div>
                                    </div>
                                    <div class="ibox-content">
                                        <div class="mb-10">
                                            <h6>
                                                <a class="text-navy">
                                                    Teacher's Comment:
                                                </a>
                                            </h6>
                                        </div>
                                        <p class="mt-1">@Model.Exam.Comment</p>
                                    </div>
                                    <div class="ibox-content">
                                        <div class="mb-10">
                                            <h6>
                                                <a class="text-navy">
                                                    Final Result (Marks):
                                                </a>
                                            </h6>
                                        </div>
                                        <p class="mt-1">@Model.Exam.Result</p>
                                    </div>
                                    @if (Model.Exam.IsPassed == false)
                                    {
                                        <div class="ibox-content">
                                            <div class="mb-10">
                                                <h6>
                                                    <a class="text-navy">
                                                        Status:
                                                    </a>
                                                </h6>
                                            </div>
                                            <p class="mt-1 text-danger">Failed</p>
                                        </div>
                                        if (Model.Course.Material == "Kỹ thuật số")
                                        {
                                            <div class="ibox-content">
                                                <div class="mb-10">
                                                    <h6>
                                                        <a class="text-navy">
                                                            Instant Canvas:
                                                        </a>
                                                    </h6>
                                                </div>
                                                <div id="bd-wrapper" ng-controller="CanvasControls">

                                                    <canvas id="c" width="1030" height="600" style="border:1px solid #aaa"></canvas>

                                                    <div>
                                                        <div id="drawing-mode-options">
                                                            <div style="display: flex;" class="mt-20">
                                                                <label for="drawing-mode-selector" style="width: 130px; line-height: 40px;">Mode:</label>
                                                                <select id="drawing-mode-selector">
                                                                    <option>Pencil</option>
                                                                    <option>Circle</option>
                                                                    <option>Spray</option>
                                                                    <option>Pattern</option>

                                                                    <option>hline</option>
                                                                    <option>vline</option>
                                                                    <option>square</option>
                                                                    <option>diamond</option>
                                                                    <option>texture</option>
                                                                </select>
                                                            </div>

                                                            <label for="drawing-line-width" class="mt-20" style="width: 130px;">Line width:</label>
                                                            <span class="info">30</span><input type="range" value="30" min="0" max="150"
                                                                                               id="drawing-line-width"><br>

                                                            <label for="drawing-color" class="mt-20" style="width: 130px;">Line color:</label>
                                                            <input type="color" value="#005E7A" id="drawing-color"><br>

                                                            <label for="drawing-shadow-color" class="mt-20" style="width: 130px;">Shadow color:</label>
                                                            <input type="color" value="#005E7A" id="drawing-shadow-color"><br>

                                                            <label for="drawing-shadow-width" class="mt-20" style="width: 130px;">Shadow width:</label>
                                                            <span class="info">0</span><input type="range" value="0" min="0" max="50" id="drawing-shadow-width"><br>

                                                            <label for="drawing-shadow-offset" class="mt-20" style="width: 130px;">Shadow offset:</label>
                                                            <span class="info">0</span><input type="range" value="0" min="0" max="50"
                                                                                              id="drawing-shadow-offset"><br>
                                                        </div>

                                                        <button id="drawing-mode" class="btn main-btn mt-20">Cancel drawing mode</button><br>
                                                        <button id="clear-canvas" class="btn main-btn mt-20">Clear</button><br>
                                                        <button id="export-button" class="btn main-btn mt-20">Export as PNG</button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <div class="ibox-content">
                                            <h6>
                                                <a class="text-navy">
                                                    Re-Submit My Work:
                                                </a>
                                            </h6>
                                            <form method="post" asp-page-handler="resubmit" enctype="multipart/form-data" class="mt-10">
                                            <div class="form-group row">
                                                <div class="col">
                                                    <input required class="form-control" id="imageFile" type="file" asp-for="Image" accept="image/*">
                                                </div>
                                                <input type="hidden" name="id" value="@Model.Course.Id" />
                                                <input type="hidden" name="changeId" value="@Model.Lesson.Id" />
                                                <input type="hidden" name="examId" value="@Model.Exam.Id" />
                                                <div class="col">
                                                    <button type="submit" value="Add" id="btnAdd" class="btn btn-primary">Submit</button>
                                                </div>
                                            </div>
                                        </form>
                                        </div>
                                    } else
                                    {
                                        <div class="ibox-content">
                                            <div class="mb-10">
                                                <h6>
                                                    <a class="text-navy">
                                                        Status:
                                                    </a>
                                                </h6>
                                            </div>
                                            <p class="mt-1 text-success">Passed</p>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-sm-8">
                        <div class="ibox">
                            <div class="ibox-content tbl-exam">
                                <h6 class="tbl-exam">
                                    <a class="index-title">
                                        @Model.Lesson.Title
                                    </a>
                                </h6>
                            </div>
                            <div class="ibox-content">
                                <div class="video-container">
                                    <iframe src="@Model.Lesson.VideoUrl"></iframe>
                                </div>
                            </div>
                            <div class="ibox-content">
                                <h6>
                                    <a class="text-navy">
                                        Content:
                                    </a>
                                </h6>
                                <p class="mt-1">@Model.Lesson.Content</p>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-sm-4">
                    <div class="scrollable-content" style="max-height: 840px; overflow-y: scroll;">
                        <div class="accordion" id="accordionExample">
                            <!-- Your existing card elements go here -->
                            @{
                                int lessonNumber = 1; // Initialize the lesson number counter
                            }
                            @foreach (var lesson in Model.Lessons) {
                                <div class="card mt-20">
                                    <div class="card-header tbl-exam">
                                        <span class="lecture-section"><i class="bi bi-bookmark-dash-fill"></i> Lesson @(lessonNumber)</span>
                                    </div>
                                    <div class="card-header">
                                        <a asp-page="Index" asp-route-id="@Model.Course.Id" asp-route-changeId="@lesson.Id" class="lecture-title">
                                            <ul>
                                                <li><span class="head">@lesson.Title</span></li>
                                            </ul>
                                        </a>
                                    </div>
                                </div>
                                lessonNumber++;
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <link rel="stylesheet" href="/css/cart.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.3.1/fabric.min.js"></script>
    <script>
        (function () {
            var $ = function (id) { return document.getElementById(id) };

            var canvas = this.__canvas = new fabric.Canvas('c', {
                isDrawingMode: true
            });

            fabric.Object.prototype.transparentCorners = false;

            var drawingModeEl = $('drawing-mode'),
                drawingOptionsEl = $('drawing-mode-options'),
                drawingColorEl = $('drawing-color'),
                drawingShadowColorEl = $('drawing-shadow-color'),
                drawingLineWidthEl = $('drawing-line-width'),
                drawingShadowWidth = $('drawing-shadow-width'),
                drawingShadowOffset = $('drawing-shadow-offset'),
                clearEl = $('clear-canvas');

            clearEl.onclick = function () { canvas.clear() };

            drawingModeEl.onclick = function () {
                canvas.isDrawingMode = !canvas.isDrawingMode;
                if (canvas.isDrawingMode) {
                    drawingModeEl.innerHTML = 'Cancel drawing mode';
                    drawingOptionsEl.style.display = '';
                }
                else {
                    drawingModeEl.innerHTML = 'Enter drawing mode';
                    drawingOptionsEl.style.display = 'none';
                }
            };

            if (fabric.PatternBrush) {
                var vLinePatternBrush = new fabric.PatternBrush(canvas);
                vLinePatternBrush.getPatternSrc = function () {

                    var patternCanvas = fabric.document.createElement('canvas');
                    patternCanvas.width = patternCanvas.height = 10;
                    var ctx = patternCanvas.getContext('2d');

                    ctx.strokeStyle = this.color;
                    ctx.lineWidth = 5;
                    ctx.beginPath();
                    ctx.moveTo(0, 5);
                    ctx.lineTo(10, 5);
                    ctx.closePath();
                    ctx.stroke();

                    return patternCanvas;
                };

                var hLinePatternBrush = new fabric.PatternBrush(canvas);
                hLinePatternBrush.getPatternSrc = function () {

                    var patternCanvas = fabric.document.createElement('canvas');
                    patternCanvas.width = patternCanvas.height = 10;
                    var ctx = patternCanvas.getContext('2d');

                    ctx.strokeStyle = this.color;
                    ctx.lineWidth = 5;
                    ctx.beginPath();
                    ctx.moveTo(5, 0);
                    ctx.lineTo(5, 10);
                    ctx.closePath();
                    ctx.stroke();

                    return patternCanvas;
                };

                var squarePatternBrush = new fabric.PatternBrush(canvas);
                squarePatternBrush.getPatternSrc = function () {

                    var squareWidth = 10, squareDistance = 2;

                    var patternCanvas = fabric.document.createElement('canvas');
                    patternCanvas.width = patternCanvas.height = squareWidth + squareDistance;
                    var ctx = patternCanvas.getContext('2d');

                    ctx.fillStyle = this.color;
                    ctx.fillRect(0, 0, squareWidth, squareWidth);

                    return patternCanvas;
                };

                var diamondPatternBrush = new fabric.PatternBrush(canvas);
                diamondPatternBrush.getPatternSrc = function () {

                    var squareWidth = 10, squareDistance = 5;
                    var patternCanvas = fabric.document.createElement('canvas');
                    var rect = new fabric.Rect({
                        width: squareWidth,
                        height: squareWidth,
                        angle: 45,
                        fill: this.color
                    });

                    var canvasWidth = rect.getBoundingRect().width;

                    patternCanvas.width = patternCanvas.height = canvasWidth + squareDistance;
                    rect.set({ left: canvasWidth / 2, top: canvasWidth / 2 });

                    var ctx = patternCanvas.getContext('2d');
                    rect.render(ctx);

                    return patternCanvas;
                };

                var img = new Image();
                img.src = '../assets/honey_im_subtle.png';

                var texturePatternBrush = new fabric.PatternBrush(canvas);
                texturePatternBrush.source = img;
            }

            $('drawing-mode-selector').onchange = function () {

                if (this.value === 'hline') {
                    canvas.freeDrawingBrush = vLinePatternBrush;
                }
                else if (this.value === 'vline') {
                    canvas.freeDrawingBrush = hLinePatternBrush;
                }
                else if (this.value === 'square') {
                    canvas.freeDrawingBrush = squarePatternBrush;
                }
                else if (this.value === 'diamond') {
                    canvas.freeDrawingBrush = diamondPatternBrush;
                }
                else if (this.value === 'texture') {
                    canvas.freeDrawingBrush = texturePatternBrush;
                }
                else {
                    canvas.freeDrawingBrush = new fabric[this.value + 'Brush'](canvas);
                }

                if (canvas.freeDrawingBrush) {
                    var brush = canvas.freeDrawingBrush;
                    brush.color = drawingColorEl.value;
                    if (brush.getPatternSrc) {
                        brush.source = brush.getPatternSrc.call(brush);
                    }
                    brush.width = parseInt(drawingLineWidthEl.value, 10) || 1;
                    brush.shadow = new fabric.Shadow({
                        blur: parseInt(drawingShadowWidth.value, 10) || 0,
                        offsetX: 0,
                        offsetY: 0,
                        affectStroke: true,
                        color: drawingShadowColorEl.value,
                    });
                }
            };

            drawingColorEl.onchange = function () {
                var brush = canvas.freeDrawingBrush;
                brush.color = this.value;
                if (brush.getPatternSrc) {
                    brush.source = brush.getPatternSrc.call(brush);
                }
            };
            drawingShadowColorEl.onchange = function () {
                canvas.freeDrawingBrush.shadow.color = this.value;
            };
            drawingLineWidthEl.onchange = function () {
                canvas.freeDrawingBrush.width = parseInt(this.value, 10) || 1;
                this.previousSibling.innerHTML = this.value;
            };
            drawingShadowWidth.onchange = function () {
                canvas.freeDrawingBrush.shadow.blur = parseInt(this.value, 10) || 0;
                this.previousSibling.innerHTML = this.value;
            };
            drawingShadowOffset.onchange = function () {
                canvas.freeDrawingBrush.shadow.offsetX = parseInt(this.value, 10) || 0;
                canvas.freeDrawingBrush.shadow.offsetY = parseInt(this.value, 10) || 0;
                this.previousSibling.innerHTML = this.value;
            };

            if (canvas.freeDrawingBrush) {
                canvas.freeDrawingBrush.color = drawingColorEl.value;
                canvas.freeDrawingBrush.source = canvas.freeDrawingBrush.getPatternSrc.call(this);
                canvas.freeDrawingBrush.width = parseInt(drawingLineWidthEl.value, 10) || 1;
                canvas.freeDrawingBrush.shadow = new fabric.Shadow({
                    blur: parseInt(drawingShadowWidth.value, 10) || 0,
                    offsetX: 0,
                    offsetY: 0,
                    affectStroke: true,
                    color: drawingShadowColorEl.value,
                });
            }
        })();
    </script>

    <script>
        document.getElementById('export-button').addEventListener('click', function () {
            // Export the canvas to a data URL (PNG format)
            const canvas = document.getElementById("c");
            var dataURL = canvas.toDataURL({
                format: 'png',
                quality: 1
            });

            // Create an anchor element for downloading
            var a = document.createElement('a');
            a.href = dataURL;
            a.download = 'drawing.png';
            document.body.appendChild(a);

            // Trigger a click event on the anchor to initiate the download
            a.click();

            // Clean up the anchor element
            document.body.removeChild(a);
        });
    </script>
}